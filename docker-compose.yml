services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: prodcast2.0
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env.${ENV}    # ðŸ‘ˆ choose which env file to load
    environment:
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: 111
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SETTINGS_MODULE: mainapp.settings
      POSTGRES_DB: prodcast2.0
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "80:80"
    env_file:
      - .env.${ENV}    # ðŸ‘ˆ same trick here
    environment:
      NODE_ENV: ${ENV}
    depends_on:
      - backend

volumes:
  postgres_data: